{"version":3,"sources":["components/tables/data/ColumnConfiguration.ts","api/restaurants/RestaurantsAPI.ts","hooks/useRestaurants.ts","images/tableoid.png","styles/Styles.ts","components/Search.tsx","components/tables/HeaderColumn.tsx","components/tables/Table.tsx","components/Restaurants.tsx","containers/SiteContainer.tsx","containers/Tableoid.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["ORDER","headers","Authorization","getRestaurants","a","fetch","result","json","useRestaurants","filter","useState","restaurants","setRestaurants","length","then","data","adjustedResults","map","r","genre","replaceAll","name","toLowerCase","includes","city","Styles","siteContainer","background","backgroundPosition","display","alignItems","justifyContent","height","width","columnContainer","flexDirection","fixedWidthContainer","tableContainer","position","top","maxWidth","fontHeader","fontSize","bold","fontWeight","horizontalFill","iconButton","borderStyle","borderWidth","backgroundColor","padding","margin","table","searchInput","searchContainer","Search","props","search","setSearch","updateSearchFilter","style","placeholder","value","onChange","e","target","onKeyDown","keyCode","onClick","className","HeaderColumn","column","setColumnConfiguration","columnConfiguration","icon","order","ASC","DESC","sort","nextOrder","NONE","accessor","toggleOrder","otherFilters","filters","f","newConfig","updateColumnConfiguration","Table","columns","defaultConfiguration","resultsPerPage","page","setPage","orderedData","b","localeCompare","filteredData","forEach","row","displayData","slice","pages","Math","ceil","index","disabled","Restaurants","val","SiteContainer","children","Restaurant","App","Tableoid","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.98ed54b6.chunk.js","sourcesContent":["export enum ORDER {\n    ASC,\n    DESC,\n    NONE\n}\n\nexport interface ColumnFilter {\n    column: string,\n    filter: string\n}\n\nexport interface ColumnConfiguration {\n    order: ORDER,\n    column: string,\n    filters: [ColumnFilter]\n}","const restaurants = 'https://code-challenge.spectrumtoolbox.com/api/restaurants';\n\nconst headers = {\n    Authorization: 'Api-Key q3MNxtfep8Gt'\n}\nexport const getRestaurants = async () => {\n    const result = await fetch(restaurants, {headers: headers})\n    return await result.json()\n}","import { useState } from 'react'\nimport { getRestaurants } from '../api/restaurants/RestaurantsAPI'\n\nconst useRestaurants = (filter: string) => {\n  const [restaurants, setRestaurants] = useState([])\n  if (restaurants.length === 0) {\n    getRestaurants().then(data => setRestaurants(data))\n  }\n  var adjustedResults = restaurants.map((r: any) => {\n    r.genre = r.genre.replaceAll(',', ', ')\n    return r\n  })\n  if (filter && filter !== '') {\n    adjustedResults = adjustedResults.filter(\n      (r: any) =>\n        r.name.toLowerCase().includes(filter.toLowerCase()) ||\n        r.city.toLowerCase().includes(filter.toLowerCase()) ||\n        r.genre.toLowerCase().includes(filter.toLowerCase())\n    )\n  }\n  return adjustedResults\n}\n\nexport default useRestaurants\n","export default __webpack_public_path__ + \"static/media/tableoid.032f8441.png\";","import background from '../images/tableoid.png'\n\nexport const Styles = {\n    siteContainer: {\n        background: `url(${background}) 50% 0% / contain no-repeat`,\n        backgroundPosition: 'center top',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        height: '75vh',\n        width: '100vw'\n    },\n    columnContainer: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column' as 'column'\n    },\n    fixedWidthContainer: {\n        width: '75vw'\n    },\n    tableContainer: {\n        position: 'relative' as 'relative',\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'center',\n        flexDirection: 'column' as 'column',\n        top: '25vh',\n        maxWidth: '50vw',\n    },\n    fontHeader: {\n        fontSize: 18\n    },\n    bold: {\n        fontWeight: 'bolder' as 'bolder'\n    },\n    horizontalFill: {\n        display: 'flex',\n        alignItems: 'center',\n        justifyContent: 'space-around',\n        flexDirection: 'row' as 'row',\n        width: '100%',\n    },\n    iconButton: {\n        borderStyle: 'none',\n        borderWidth: 0,\n        backgroundColor: 'transparent',\n        padding: 0,\n        margin: 0\n    },\n    table: {\n        backgroundColor: 'cornsilk',\n    },\n    searchInput: {\n        width: 250\n    },\n    searchContainer: {\n        padding: 5\n    }\n}","import React, { useState } from 'react'\nimport { Styles } from '../styles/Styles'\n\nconst Search = (props: any) => {\n  const [search, setSearch] = useState('')\n  const { updateSearchFilter } = props\n  return (\n    <div style={Styles.searchContainer}>\n      <input\n        style={Styles.searchInput}\n        placeholder='Search restaurants...'\n        value={search}\n        onChange={(e: any) => {\n          setSearch(e.target.value)\n          // clear search results\n          if (e.target.value === '') {\n            updateSearchFilter('')\n          }\n        }}\n        onKeyDown={(e: any) => {\n          if (e.keyCode === 13) {\n            updateSearchFilter(e.target.value)\n          }\n        }}\n      ></input>\n      <button onClick={() => updateSearchFilter(search)}>\n        <i className='fas fa-search' />\n      </button>\n    </div>\n  )\n}\n\nexport default Search\n","import React from 'react'\nimport { Styles } from '../../styles/Styles'\nimport { ColumnFilter, ORDER } from './data/ColumnConfiguration'\n\nconst HeaderColumn = (props: any) => {\n  const { column, setColumnConfiguration, columnConfiguration } = props\n\n  var icon = ''\n  switch (columnConfiguration.order) {\n    case ORDER.ASC:\n      icon = 'fas fa-chevron-up'\n      break\n    case ORDER.DESC:\n      icon = 'fa-chevron-down'\n      break\n    default:\n      icon = 'fa-chevron-right'\n      break\n  }\n\n  const toggleOrder = () => {\n    var nextOrder = ORDER.NONE\n    switch (columnConfiguration.order) {\n      case ORDER.ASC:\n        nextOrder = ORDER.NONE\n        break\n      case ORDER.DESC:\n        nextOrder = ORDER.ASC\n        break\n      case ORDER.NONE:\n        nextOrder = ORDER.DESC\n        break\n      default:\n        break\n    }\n    setColumnConfiguration({\n      ...columnConfiguration,\n      column: column.accessor,\n      order: nextOrder\n    })\n  }\n\n  const updateColumnConfiguration = (value: string) => {\n    const otherFilters = columnConfiguration.filters.filter(\n      (f: ColumnFilter) => f.column !== column.accessor\n    )\n    const newConfig = {\n      ...columnConfiguration,\n      filters: [{ column: column.accessor, filter: value }, ...otherFilters]\n    }\n    setColumnConfiguration(newConfig)\n  }\n\n  return (\n    <th>\n      <div style={Styles.columnContainer}>\n        {column.name}\n        {column.sort ? (\n          <i\n            onClick={() => toggleOrder()}\n            style={{ position: 'relative', padding: 5, top: 2 }}\n            className={'fas ' + icon}\n          />\n        ) : null}\n        {column.filter ? (\n          <input\n            onChange={(e: any) => updateColumnConfiguration(e.target.value)}\n          ></input>\n        ) : null}\n      </div>\n    </th>\n  )\n}\n\nexport default HeaderColumn\n","import React, { useState } from 'react'\nimport { Styles } from '../../styles/Styles'\nimport { Column } from './data/Column'\nimport { ColumnFilter, ORDER } from './data/ColumnConfiguration'\nimport HeaderColumn from './HeaderColumn'\n\nconst Table = (props: any) => {\n  const { columns, data, defaultConfiguration, resultsPerPage } = props\n  const [page, setPage] = useState(1)\n  const [columnConfiguration, setColumnConfiguration] = useState(\n    defaultConfiguration\n  )\n\n  // sort data on header ordering\n  var orderedData = [...data]\n  if (\n    columnConfiguration.column !== '' &&\n    columnConfiguration.order !== ORDER.NONE\n  ) {\n    orderedData.sort((a: any, b: any) => {\n      const column = columnConfiguration.column\n      return columnConfiguration.order === ORDER.ASC\n        ? a[column].localeCompare(b[column])\n        : b.name.localeCompare(a[column])\n    })\n  }\n\n  // filter data on header filter values\n  var filteredData = [...orderedData]\n  columnConfiguration.filters.forEach((f: ColumnFilter) => {\n    filteredData = filteredData.filter((row: any) =>\n      row[f.column].toLowerCase().includes(f.filter.toLowerCase())\n    )\n  })\n\n  // setup page information\n  const displayData = filteredData.slice(\n    (page - 1) * resultsPerPage,\n    (page - 1) * resultsPerPage + resultsPerPage\n  )\n\n  const nextPage = () => {\n    setPage(page + 1)\n  }\n\n  const prevPage = () => {\n    setPage(page - 1)\n  }\n\n  const pages = Math.ceil(filteredData.length / resultsPerPage)\n\n  return (\n    <>\n      <table style={Styles.table}>\n        <thead>\n          <tr>\n            {columns.map((column: Column) => (\n              <HeaderColumn\n                key={column.name}\n                setColumnConfiguration={setColumnConfiguration}\n                columnConfiguration={columnConfiguration}\n                column={column}\n              />\n            ))}\n          </tr>\n        </thead>\n        <tbody>\n          {displayData.map((row: any, index: number) => (\n            <tr key={index}>\n              {columns.map((column: Column) => {\n                return typeof column.accessor === 'string' ? (\n                  <td key={column.name}>{row[column.accessor]}</td>\n                ) : (\n                  <td key={column.name}>{column.accessor(row)}</td>\n                )\n              })}\n            </tr>\n          ))}\n        </tbody>\n      </table>\n      <div style={{ ...Styles.horizontalFill, padding: 5 }}>\n        <button disabled={page === 1} onClick={() => prevPage()}>\n          <i className='fas fa-chevron-left' />\n        </button>\n        <p>\n          {page} of {pages}\n        </p>\n        <button disabled={page === pages} onClick={() => nextPage()}>\n          <i className='fas fa-chevron-right' />\n        </button>\n      </div>\n    </>\n  )\n}\n\nexport default Table\n","import React, { useState } from 'react'\nimport useRestaurants from '../hooks/useRestaurants'\nimport { Styles } from '../styles/Styles'\nimport Search from './Search'\nimport { ORDER } from './tables/data/ColumnConfiguration'\nimport Table from './tables/Table'\n\nconst Restaurants = (props: any) => {\n  const [search, setSearch] = useState('')\n  const restaurants = useRestaurants(search)\n\n  const columns = [\n    { name: 'Name', sort: true, accessor: 'name' },\n    { name: 'City', accessor: 'city' },\n    { name: 'State', accessor: 'state', filter: true },\n    { name: 'Genre', accessor: 'genre', filter: true }\n  ]\n\n  return (\n    <div style={Styles.tableContainer}>\n      <Search\n        updateSearchFilter={(val: string) => setSearch(val)}\n        search={search}\n      />\n      <Table\n        resultsPerPage={10}\n        columns={columns}\n        data={restaurants}\n        defaultConfiguration={{\n          column: 'name',\n          order: ORDER.ASC,\n          filters: []\n        }}\n      />\n    </div>\n  )\n}\n\nexport default Restaurants\n","import React from 'react'\nimport { Styles } from '../styles/Styles'\n\nconst SiteContainer = (props: any) => {\n    return (\n        <div style={Styles.siteContainer}>\n            {props.children}\n        </div>\n    )\n}\n\nexport default SiteContainer","import React from 'react'\nimport Restaurants from '../components/Restaurants'\nimport { Styles } from '../styles/Styles'\nimport SiteContainer from './SiteContainer'\n\nconst Restaurant = (props: any) => {\n  return (\n    <SiteContainer>\n      <div style={{ ...Styles.columnContainer, ...Styles.fixedWidthContainer }}>\n        <Restaurants />\n      </div>\n    </SiteContainer>\n  )\n}\n\nexport default Restaurant\n","import React from 'react'\nimport './App.css'\nimport Tableoid from './containers/Tableoid'\n\nconst App = (props: any) => {\n  return (\n    <div className='App'>\n      <Tableoid />\n    </div>\n  )\n}\n\nexport default App\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);  \n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n}\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}